name: CI

on:
  push:
  pull_request:

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

  
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: rustup component add rustfmt
      - run: cargo build --verbose
      - run: cargo test --verbose
      - run: cargo fmt --all -- --check

  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable
      - run: cargo clippy --all-targets --all-features

  docker:
    needs: build_and_test
    runs-on: ubuntu-latest
    permissions:
     packages: write
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
     
      - name: Login to Container Registry  
        uses: docker/login-action@v2
        with:  
          registry: ghcr.io 
          username: ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{vars.REPOSITORY }}/rust-lambert_w1:sha-${{ github.sha }}
            ghcr.io/${{vars.REPOSITORY }}/rust-lambert_w1:branch-${{ github.ref_name }}
            ghcr.io/${{vars.REPOSITORY }}/rust-lambert_w1:latest

      - name: Slim Docker image
        uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: "false"
        with:
          target: ghcr.io/${{vars.REPOSITORY }}/rust-lambert_w1:latest
          tag: slim

      - name: Push slimmed Docker image
        run: |
          docker push ghcr.io/${{vars.REPOSITORY }}/rust-lambert_w1:slim
